name: Count and list missing json files

on:
  push:
    branches:
      - main
      - master
    paths:
      - 'json/**'
      - '.github/workflows/count-files.yml'
  workflow_dispatch: {}

permissions:
  contents: write

jobs:
  count:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Count JSONs and write reports (strict pattern)
        shell: bash
        run: |
          set -euo pipefail
          FOLDER="json"
          COUNT_FILE="json/_file_count.txt"
          MISSING_TXT="json/_missing_numbers.txt"
          MISSING_JSON="json/_missing_numbers.json"
          EXPECTED_TOTAL=1950

          mkdir -p "$FOLDER"

          # Gather only files that strictly match: <kanji>_<number>.json
          #   - exactly one underscore
          #   - digits at the end before .json
          #   - excludes helper files like _missing_numbers.json, etc.
          mapfile -t MATCHED < <(
            find "$FOLDER" -type f -iname '*.json' \
            ! -name '_*.json' \
            -printf '%f\n' \
            | sed -nE 's/^([^_]+)_([0-9]+)\.json$/\1_\2/p'
          )

          # Extract just the numbers, sort unique
          mapfile -t FOUND_NUMS < <(
            printf '%s\n' "${MATCHED[@]}" \
            | sed -E 's/^[^_]+_([0-9]+)\.json$/\1/' \
            | sort -n | uniq
          )

          # Count found
          FOUND_TOTAL="${#FOUND_NUMS[@]}"
          printf '%s\n' "$FOUND_TOTAL" > "$COUNT_FILE"

          # Build expected 1..EXPECTED_TOTAL and compute missing
          tmp_expected="$(mktemp)"; seq 1 "$EXPECTED_TOTAL" > "$tmp_expected"
          tmp_found="$(mktemp)";    printf '%s\n' "${FOUND_NUMS[@]}" > "$tmp_found"

          mapfile -t MISSING < <(comm -23 "$tmp_expected" "$tmp_found")

          # Write newline-separated missing numbers
          if ((${#MISSING[@]})); then
            printf '%s\n' "${MISSING[@]}" > "$MISSING_TXT"
          else
            : > "$MISSING_TXT"
          fi

          # JSON summary
          {
            echo "{"
            echo "  \"folder\": \"${FOLDER}\","
            echo "  \"pattern\": \"<kanji>_<NUMBER>.json\","
            echo "  \"expected_total\": ${EXPECTED_TOTAL},"
            echo "  \"found_total\": ${FOUND_TOTAL},"
            echo "  \"missing_count\": ${#MISSING[@]},"
            echo -n "  \"missing_numbers\": ["
            if ((${#MISSING[@]})); then
              paste -sd, <(printf '%s\n' "${MISSING[@]}")
            fi
            echo "]"
            echo "}"
          } > "$MISSING_JSON"

          rm -f "$tmp_expected" "$tmp_found"

      - name: Commit results (skip CI)
        shell: bash
        run: |
          set -euo pipefail
          for p in json/_file_count.txt json/_missing_numbers.txt json/_missing_numbers.json; do
            if git check-ignore -q "$p"; then
              echo "!$p" >> .gitignore
              git add .gitignore
            fi
          done

          git config user.name  "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add -f json/_file_count.txt json/_missing_numbers.txt json/_missing_numbers.json
          if ! git diff --cached --quiet; then
            git commit -m "chore: update json count & missing list [skip ci]"
            git push
          else
            echo "No changes to commit."
          fi
